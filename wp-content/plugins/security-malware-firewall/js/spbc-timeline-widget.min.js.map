{"version":3,"file":"spbc-timeline-widget.min.js","sources":["spbc-timeline-widget.js"],"sourcesContent":["/**\n * Class to render a timeline widget for Security log\n */\nclass SpbcTimelineWidget {\n    // Static constants\n    static markerRadius = 4;\n    static hoursRangeMax = 24;\n    static axisStepsCount = 6;\n    static userActionsUpstep = 12;\n    static legendCircleX = -100;\n    static legendTextX = -85;\n\n    /**\n     * Constructor.\n     */\n    constructor() {\n        // Current time properties\n        this.now = new Date();\n        this.currentTimestamp = Math.floor(this.now.getTime() / 1000);\n\n        // Data properties\n        this.eventsData = null;\n        this.timelineMarkersData = [];\n        this.timelineKnownEventsData = [];\n        this.timelineEventTooltip = null;\n        this.timelineStartTimestamp = this.currentTimestamp - SpbcTimelineWidget.hoursRangeMax * 3600;\n    }\n\n    /**\n     * Initialize and render the timeline widget\n     */\n    render() {\n        if (typeof spbcTimelineWidgetData === 'undefined') {\n            return;\n        }\n\n        this.timelineEventTooltip = document.getElementById('spbc-timeline-tooltip');\n        this.eventsData = spbcTimelineWidgetData.users_actions;\n        this.timelineStartTimestamp = Number(spbcTimelineWidgetData.first_event_timestamp);\n        this.timelineKnownEventsData = spbcTimelineWidgetData.known_events_data;\n        this.timelineMarkersData = this.generateMarkersData(spbcTimelineWidgetData.found_types);\n\n        const activeTab = document.querySelector('.spbc_tab_section--active');\n        if (activeTab && activeTab.id === 'spbc_tab-security_log') {\n            this.initTimeline();\n        }\n\n        // Initialize timeline when tab is loaded\n        window.addEventListener('spbctTabLoaded', (event) => {\n            if (event.detail.tab === 'security_log') {\n                this.initTimeline();\n            }\n        });\n\n        // Handle window resize\n        window.addEventListener('resize', () => {\n            const userSelect = document.getElementById('spbc-timeline-user-select');\n            if (userSelect.value) {\n                this.drawUserTimeline(userSelect.value);\n            }\n        });\n    }\n\n    /**\n     * Initialize timeline with user selection\n     */\n    initTimeline() {\n        const userSelect = document.getElementById('spbc-timeline-user-select');\n        const users = Object.keys(this.eventsData);\n\n        // Reset user selection dropdown\n        userSelect.innerHTML = '';\n\n        // Populate user options\n        users.forEach((user) => {\n            userSelect.appendChild(new Option(user, user));\n        });\n\n        // Add selection handler\n        userSelect.addEventListener('change', () => {\n            this.drawUserTimeline(userSelect.value);\n        });\n\n        // Draw initial timeline or show message\n        if (users.length > 0) {\n            this.drawUserTimeline(users[0]);\n        } else {\n            document.querySelector('.spbc-timeline-container').style.display = 'none';\n            document.querySelector('.spbc-timeline-controls').style.display = 'none';\n            document.getElementById('spbc-timeline-no-data').style.display = 'block';\n        }\n    }\n\n    /**\n     * Draw time axis on the timeline\n     * @param {SVGElement} container - SVG container element\n     * @param {number} width - Drawing area width\n     * @param {number} height - Drawing area height\n     */\n    drawTimeAxis(container, width, height) {\n        const timeRange = this.currentTimestamp - this.timelineStartTimestamp;\n        const axis = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n\n        // Create main axis line\n        axis.setAttribute('class', 'spbc-timeline-axis');\n        axis.setAttribute('x1', '0');\n        axis.setAttribute('y1', height);\n        axis.setAttribute('x2', width);\n        axis.setAttribute('y2', height);\n        container.appendChild(axis);\n\n        // Create axis ticks and labels\n        for (let i = 0; i <= SpbcTimelineWidget.axisStepsCount; i++) {\n            const timestamp = this.timelineStartTimestamp + (i / SpbcTimelineWidget.axisStepsCount) * timeRange;\n            const x = (i / SpbcTimelineWidget.axisStepsCount) * width;\n\n            // Create tick mark\n            const tick = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n            tick.setAttribute('class', 'spbc-timeline-axis');\n            tick.setAttribute('x1', x);\n            tick.setAttribute('y1', height);\n            tick.setAttribute('x2', x);\n            tick.setAttribute('y2', height + 5);\n            container.appendChild(tick);\n\n            // Create time label\n            const label = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n            label.setAttribute('class', 'spbc-timeline-axis-text');\n            label.setAttribute('x', x);\n            label.setAttribute('y', height + 20);\n\n            const date = new Date(timestamp * 1000);\n            label.textContent = `${date\n                .getHours()\n                .toString()\n                .padStart(2, '0')}:${date.getMinutes()\n                .toString()\n                .padStart(2, '0')}`;\n            container.appendChild(label);\n        }\n    }\n\n    /**\n     * Create SVG element for an event\n     * @param {Object} event - Event data\n     * @param {number} x - X coordinate\n     * @param {number} y - Y coordinate\n     * @param {string} user - User name\n     * @return {SVGElement} Event group element\n     */\n    createEventElement(event, x, y, user) {\n        const group = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n        group.setAttribute('transform', `translate(${x}, ${y})`);\n        group.setAttribute('data-event', JSON.stringify({...event, user}));\n\n        // Create event marker\n        const marker = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        marker.setAttribute('class', 'spbc-timeline-event-marker');\n        marker.setAttribute('r', SpbcTimelineWidget.markerRadius);\n        marker.style.fill = this.timelineMarkersData[event.event].color;\n        group.appendChild(marker);\n\n        // Add event handlers\n        group.addEventListener('mouseenter', this.showEventTooltip.bind(this));\n        group.addEventListener('mouseleave', this.hideEventTooltip.bind(this));\n\n        return group;\n    }\n\n    /**\n     * Show event tooltip\n     * @param {Event} event - Mouse event\n     */\n    showEventTooltip(event) {\n        const eventData = JSON.parse(event.currentTarget.getAttribute('data-event'));\n        const {user, event: eventName, time} = eventData;\n\n        // Format date for display\n        const formatDate = (date) => date.toISOString().replace(/T/, ' ').replace(/\\..+/, '');\n\n        // Update tooltip content\n        document.getElementById('spbc-timeline-tooltip--user').innerText = user;\n        document.getElementById('spbc-timeline-tooltip--event').innerText = eventName;\n        document.getElementById('spbc-timeline-tooltip--time').innerText = formatDate(new Date(time * 1000));\n\n        // Show tooltip\n        this.timelineEventTooltip.style.opacity = '1';\n    }\n\n    /**\n     * Hide event tooltip\n     */\n    hideEventTooltip() {\n        this.timelineEventTooltip.style.opacity = '0';\n    }\n\n    /**\n     * Draw timeline for specific user\n     * @param {string} user - Selected user name\n     */\n    drawUserTimeline(user) {\n        const svg = document.getElementById('spbc-timeline-svg');\n        const noDataMessage = document.getElementById('spbc-timeline-no-data');\n\n        // Clear previous content\n        svg.innerHTML = '';\n        noDataMessage.style.display = 'none';\n\n        // Calculate dimensions\n        const width = svg.parentElement.clientWidth;\n        const height = svg.parentElement.clientHeight;\n        let additionalEventsHeight = 0;\n        if (spbcTimelineWidgetData.found_types.length > 5) {\n            additionalEventsHeight = (spbcTimelineWidgetData.found_types.length - 5) * 12;\n        }\n        svg.setAttribute('width', width);\n        svg.setAttribute('height', height + additionalEventsHeight);\n\n        // Setup drawing area\n        const margin = {top: 30, right: 40, bottom: 50, left: 120};\n        const contentWidth = width - margin.left - margin.right;\n        const contentHeight = height - margin.top - margin.bottom;\n\n        const g = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n        g.setAttribute('transform', `translate(${margin.left}, ${margin.top})`);\n        svg.appendChild(g);\n\n        // Draw axis\n        this.drawTimeAxis(g, contentWidth, contentHeight);\n\n        // Filter user events\n        const userEvents = (this.eventsData[user] || []).filter((event) =>\n            event.time >= this.timelineStartTimestamp &&\n            event.time <= this.currentTimestamp,\n        );\n\n        // Handle no events case\n        if (userEvents.length === 0) {\n            noDataMessage.style.display = 'block';\n            return;\n        }\n\n        // Calculate base positions\n        const baseLineY = contentHeight / 2 + additionalEventsHeight;\n        const timeRange = this.currentTimestamp - this.timelineStartTimestamp;\n        const uniqueEventsCount = spbcTimelineWidgetData.found_types.length;\n\n        // Draw event lines and legends\n        for (let i = 0; i < uniqueEventsCount; i++) {\n            const userLineY = baseLineY - (SpbcTimelineWidget.userActionsUpstep * i);\n            const eventType = spbcTimelineWidgetData.found_types[i];\n            const color = this.timelineMarkersData[eventType].color;\n\n            // Draw event line\n            const userLine = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n            userLine.setAttribute('class', 'spbc-timeline-user-line');\n            userLine.setAttribute('x1', '0');\n            userLine.setAttribute('y1', userLineY);\n            userLine.setAttribute('x2', contentWidth);\n            userLine.setAttribute('y2', userLineY);\n            g.appendChild(userLine);\n\n            // Draw legend circle\n            const legendCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            legendCircle.setAttribute('class', 'spbc-timeline-legend-circle');\n            legendCircle.setAttribute('cx', SpbcTimelineWidget.legendCircleX);\n            legendCircle.setAttribute('cy', userLineY);\n            legendCircle.setAttribute('r', SpbcTimelineWidget.markerRadius);\n            legendCircle.style.fill = color;\n            g.appendChild(legendCircle);\n\n            // Draw legend text\n            const legendText = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n            legendText.setAttribute('class', 'spbc-timeline-legend-text');\n            legendText.setAttribute('x', SpbcTimelineWidget.legendTextX);\n            legendText.setAttribute('y', userLineY);\n            legendText.setAttribute('text-anchor', 'start');\n            legendText.setAttribute('dominant-baseline', 'middle');\n            legendText.textContent = eventType;\n            g.appendChild(legendText);\n        }\n\n        // Draw events\n        userEvents.forEach((userEvent) => {\n            const x = ((userEvent.time - this.timelineStartTimestamp) / timeRange) * contentWidth;\n            const eventY = baseLineY + this.timelineMarkersData[userEvent.event].upstep;\n            g.appendChild(this.createEventElement(userEvent, x, eventY, user));\n        });\n    }\n\n    /**\n     * Generate marker data for events\n     * @param {Array} events - List of event types\n     * @return {Object} Marker configuration data\n     */\n    generateMarkersData(events) {\n        const colorMap = {};\n        let upstep = 0;\n        let colorScheme = 'default';\n\n        events.forEach((userEvent) => {\n            if (this.timelineKnownEventsData[userEvent] && this.timelineKnownEventsData[userEvent].color_scheme) {\n                colorScheme = this.timelineKnownEventsData[userEvent].color_scheme;\n            }\n            colorMap[userEvent] = {\n                color: colorScheme,\n                upstep: upstep,\n            };\n            upstep -= SpbcTimelineWidget.userActionsUpstep;\n        });\n\n        return colorMap;\n    }\n}\n\n/**\n * Wrapper\n */\nfunction spbcTimelineWidgetRender() { // eslint-disable-line no-unused-vars\n    const timelineWidget = new SpbcTimelineWidget();\n    timelineWidget.render();\n}\n\n"],"names":["SpbcTimelineWidget","markerRadius","hoursRangeMax","axisStepsCount","userActionsUpstep","legendCircleX","legendTextX","constructor","this","now","Date","currentTimestamp","Math","floor","getTime","eventsData","timelineMarkersData","timelineKnownEventsData","timelineEventTooltip","timelineStartTimestamp","render","activeTab","spbcTimelineWidgetData","document","getElementById","users_actions","Number","first_event_timestamp","known_events_data","generateMarkersData","found_types","querySelector","id","initTimeline","window","addEventListener","event","detail","tab","userSelect","value","drawUserTimeline","users","Object","keys","innerHTML","forEach","appendChild","Option","user","length","style","display","drawTimeAxis","container","width","height","timeRange","axis","createElementNS","setAttribute","let","i","timestamp","x","tick","label","date","textContent","getHours","toString","padStart","getMinutes","createEventElement","y","group","marker","JSON","stringify","fill","color","showEventTooltip","bind","hideEventTooltip","eventName","time","parse","currentTarget","getAttribute","innerText","toISOString","replace","opacity","svg","noDataMessage","parentElement","clientWidth","clientHeight","additionalEventsHeight","margin","contentWidth","contentHeight","g","userEvents","filter","baseLineY","uniqueEventsCount","userLineY","eventType","userLine","legendCircle","legendText","userEvent","eventY","upstep","events","colorMap","colorScheme","color_scheme","spbcTimelineWidgetRender"],"mappings":"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"}